package com.vikas.test.weather;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

import com.vikas.framework.core.Browser;
import com.vikas.framework.core.WebDriverManager;

public class WeatherHomeScreenTests {

	WebDriver driver;
	@AfterMethod
	public void closeBrowser(){
		driver.close();
	}
	
	@BeforeMethod
	public void initBrowser(){
		driver = WebDriverManager.getInstance();
		driver.get("http://weather.com");
	}
	
	@Test(dependsOnMethods="testWeatherLogo")
	public void testUrlRedirection(){
		Assert.assertEquals(driver.getCurrentUrl(), "https://weather.com/en-IN","URL failed to redirect to en-IN");
	}
	@Test
	public void testWeatherLogo(){
		WebElement imgLogo = driver.findElement(By.id("wx-twc-logo-img"));
		Assert.assertTrue(imgLogo.isDisplayed(),"Logo Image was not displayed");
		String base64Img = "R0lGODlhZABkAPcAAL/M5oCZzEBms+/y+RBAn5+z2WCAvyBNpjBZrM/Z7N/m8nCMxlBzuY+m0q+/3////wAzmhNUCBEYXRhWE1QPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNS4wLWMwNjEgNjQuMTQwOTQ5LCAyMDEwLzEyLzA3LTEwOjU3OjAxICAgICAgICAiPiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIiB4bWxuczpzdFJlZj0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlUmVmIyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgQ1M1LjEgTWFjaW50b3NoIiB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjIwOTFDMDRCRkQzQzExRTI4M0ZBRUVBMjFFNDc2MzZFIiB4bXBNTTpEb2N1bWVudElEPSJ4bXAuZGlkOjIwOTFDMDRDRkQzQzExRTI4M0ZBRUVBMjFFNDc2MzZFIj4gPHhtcE1NOkRlcml2ZWRGcm9tIHN0UmVmOmluc3RhbmNlSUQ9InhtcC5paWQ6MjA5MUMwNDlGRDNDMTFFMjgzRkFFRUEyMUU0NzYzNkUiIHN0UmVmOmRvY3VtZW50SUQ9InhtcC5kaWQ6MjA5MUMwNEFGRDNDMTFFMjgzRkFFRUEyMUU0NzYzNkUiLz4gPC9yZGY6RGVzY3JpcHRpb24+IDwvcmRmOlJERj4gPC94OnhtcG1ldGE+IDw/eHBhY2tldCBlbmQ9InIiPz4B//79/Pv6+fj39vX08/Lx8O/u7ezr6uno5+bl5OPi4eDf3t3c29rZ2NfW1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";
		Assert.assertTrue(imgLogo.getAttribute("src").contains(base64Img),"Invalid logo image");
		Assert.fail("Failing test case");
	}
	@Test
	public void testDefaultUnitIsC(){
		String actualunit = driver.findElement(By.className("unit-display")).getText();
		Assert.assertEquals(actualunit.trim(), "°C","Default unit was not C");
	}
	@Test
	public void testSwitchUnit(){
		driver.findElement(By.className("unit-display")).click();
		driver.findElement(By.className("fahrenheit")).click();
		WebDriverWait wait = new WebDriverWait(driver, 60);
		wait.until(ExpectedConditions.textToBePresentInElementLocated(By.className("unit-display"), "F"));
		String unitSelected = driver.findElement(By.className("unit-display")).getText();
		Assert.assertEquals(unitSelected.trim(), "°F","Unit switching to F failed");
	}
}
